#!/usr/bin/nft -f
flush ruleset

table inet filter {
  set blocklist4 {
    type ipv4_addr
    timeout 5m
  }

  set blocklist6 {
    type ipv6_addr
    timeout 5m
  }

  chain output {
    type filter hook output priority 0; policy accept;
  }

  chain input {
    type filter hook input priority 0; policy drop;

    # Allow trusted networks to access the router
    iifname {
      "eth1",
    } accept

    # Allow returning traffic from wan and drop everthing else
    iifname "eth2" ct state { established, related } accept
    iifname "eth2" drop
  }

  chain forward {
    type filter hook forward priority 0; policy drop;

# early dropping blocked connections
    ip daddr @blocklist4 tcp dport 443 drop
    ip daddr @blocklist4 udp dport 443 drop
    ip6 daddr @blocklist6 tcp dport 443 drop
    ip6 daddr @blocklist6 udp dport 443 drop


    tcp dport 443 goto https
    udp dport 443 goto https

    # Allow trusted network WAN access
    iifname {
            "eth1",
    } oifname {
            "eth2",
    } accept comment "Allow trusted LAN to WAN"

    # Allow established WAN to return
    iifname {
            "eth2",
    } oifname {
            "eth2",
    } ct state established,related accept comment "Allow established back to LANs"
  }

  chain https {
    queue num 100 bypass
    ip protocol { tcp, udp } meta mark 123 add @blocklist4 { ip saddr }
    ip6 nexthdr { tcp, udp } meta mark 123 add @blocklist6 { ip6 saddr }
    meta mark 123 reject
  }
}

table ip nat {
  chain prerouting {
    type nat hook output priority 0; policy accept;
  }

  # Setup NAT masquerading on the wan interface
  chain postrouting {
    type nat hook postrouting priority 0; policy accept;
    oifname "eth2" masquerade
  }
}